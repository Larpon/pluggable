// Copyright(C) 2023 Lars Pontoppidan. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.
module main

import moo

fn new_plugin_bar(s &State) &Bar {
	return &Bar{
		state: s
	}
}

struct Bar {
mut:
	state &State
}

fn (mut b Bar) do_y() ! {
	println('${@STRUCT}.${@FN} called')
	b.state.goo += 'bar'
}

fn (mut b Bar) do_z() ! {
	println('${@STRUCT}.${@FN} called')
	b.state.goo += 'barz'
}

fn (mut b Bar) shutdown() ! {
	println('${@STRUCT}.${@FN} called')
	b.state.goo += 'barBYE'
}

fn (mut b Bar) use_moo_state(ms &moo.State) ! {
	eprintln('${@STRUCT}.${@FN} called: ${ms.abc()}')
}
